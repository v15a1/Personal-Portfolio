{"version":3,"sources":["assets/images/photo.png","colors.jsx","assets/images/logo.jsx","assets/images/moon-icon.jsx","assets/images/sun-icon.jsx","components/appbar/appbar.component.jsx","assets/images/github-icon.jsx","assets/images/linkediIn-icon.jsx","assets/images/medium-icon.jsx","assets/fonts/fonts.jsx","constants.jsx","components/content/about-me.component.jsx","assets/image-assets.jsx","assets/images/circle-background.jsx","components/landing-component/landing-component.component.jsx","views/homepage.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Colors","black","ash","white","grey","lightGrey","lightYellow","yellowOrchre","darkModeYellow","lightModeYellow","blackAsh","Logo","darkmode","width","height","viewBox","fill","xmlns","d","MoonIcon","style","SunIcon","iconData","url","imageSrc","clip-path","id","Header","callback","useState","setDarkMode","topBarStyle","position","top","display","justifyContent","alignItems","backgroundColor","fontWeight","padding","boxSizing","zIndex","map","icon","href","target","iconStyle","onClick","margin","Fonts","GilroyThin","GilroyUltraThin","GilroyBlack","GilroyRegular","JetBrainsMonoBold","JetBrainsMonoRegular","Constants","appbarHeightPadding","paraStyle","fontFamily","fontSize","AboutMe","styles","windowHeight","windowWidth","ReactRotatingText","require","background","color","xs","sm","md","lg","lineHeight","textAlign","items","interests","marginTop","contactInfo","info","text","ContactInfo","className","ImageAssets","personalPhoto","Photo","CircleBackground","cx","cy","r","LandingComponent","divHeight","setHeight","divWidth","setWidth","ref","useRef","useEffect","current","clientHeight","clientWidth","circleStyle","left","float","personalInterests","interest","paddingLeft","paddingRight","overflow","src","HomePage","props","containers","React","createRef","callbackDarkMode","setState","darkmodeEnabled","state","this","updateDimensions","window","addEventListener","bind","removeEventListener","innerWidth","innerHeight","topBarHeight","footerMenuHeight","showFooterMenuText","showSidebar","sidebarWidth","sidebarCollapsed","minHeight","fluid","Component","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.4bf36864.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/photo.e03f375b.png\";","const Colors = {\n    black : \"#000000\",\n    ash : \"#333333\",\n    white: \"#FFFFFF\",\n    grey: \"CCCCCC\",\n    lightGrey : \"#f8f8f8\",\n    lightYellow : \"#FFF9ED\",\n    yellowOrchre: \"#FFCE70\",\n    darkModeYellow : \"#FFA800\",\n    lightModeYellow : \"#FFE4AE\",\n    blackAsh: \"#111111\"\n}\n\nexport default Colors","import React from \"react\";\nimport Colors from \"../../colors\";\n\n\nexport const Logo = ({darkmode}) => {\n  return (\n    <svg\n      width=\"40\"\n      height=\"40\"\n      viewBox=\"0 0 408 304\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M223.81 1.83133L143.257 304H74.6033L0 1.83133H54.0073L113.964 269.663L173.464 1.83133H223.81Z\"\n        fill={darkmode ? Colors.white : Colors.black}\n      />\n      <path\n        d=\"M387.404 84.6988C387.404 105.454 382.064 123.157 371.385 137.807C361.011 152.458 346.67 162.378 328.362 167.566L408 304H349.416L267.947 159.325C266.117 155.968 265.201 152.916 265.201 150.169C288.086 150.169 305.02 145.133 316.005 135.06C326.989 124.683 332.481 108.506 332.481 86.5301C332.481 68.2169 327.752 54.6345 318.293 45.7831C309.139 36.6265 294.951 32.0482 275.728 32.0482C266.269 32.0482 256.505 32.8112 246.436 34.3373V304H192.886V3.66266C228.891 1.22089 257.573 0 278.932 0C351.247 0 387.404 28.2329 387.404 84.6988Z\"\n        fill={darkmode ? Colors.white : Colors.black}\n      />\n    </svg>\n  );\n};\n","import React from \"react\";\nimport Colors from \"../../colors\";\nexport const MoonIcon = ({ darkmode, style }) => (\n  //{darkmode ? Colors.white : Colors.black}\n  <svg\n    style={style}\n    // height=\"448pt\"\n    viewBox=\"-12 0 448 448.04455\"\n    // width=\"448pt\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      d=\"m224.023438 448.03125c85.714843.902344 164.011718-48.488281 200.117187-126.230469-22.722656 9.914063-47.332031 14.769531-72.117187 14.230469-97.15625-.109375-175.890626-78.84375-176-176 .972656-65.71875 37.234374-125.832031 94.910156-157.351562-15.554688-1.980469-31.230469-2.867188-46.910156-2.648438-123.714844 0-224.0000005 100.289062-224.0000005 224 0 123.714844 100.2851565 224 224.0000005 224zm0 0\"\n      fill={darkmode ? Colors.white : Colors.black}\n    />\n  </svg>\n);\n","import React from \"react\";\nimport Colors from \"../../colors\";\nexport const SunIcon = ({ darkmode, style }) => (\n  <svg\n    // width=\"512\"\n    // height=\"512\"\n    style={style}\n    viewBox=\"0 0 512 512\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      d=\"M108.112 178.495L71.4269 163.297L59.9449 191.013L96.5869 206.193C99.6029 196.557 103.48 187.298 108.112 178.495Z\"\n      fill={darkmode ? Colors.white : Colors.black}\n    />\n    <path\n      d=\"M256 89C261.056 89 266.057 89.239 271 89.681V0H241V89.681C245.943 89.239 250.944 89 256 89Z\"\n      fill={darkmode ? Colors.white : Colors.black}\n    />\n    <path\n      d=\"M89 256C89 250.944 89.239 245.943 89.681 241H0V271H89.681C89.239 266.057 89 261.056 89 256Z\"\n      fill={darkmode ? Colors.white : Colors.black}\n    />\n    <path\n      d=\"M149.054 127.842L85.587 64.374L64.374 85.587L127.842 149.055C134.267 141.368 141.368 134.267 149.054 127.842V127.842Z\"\n      fill={darkmode ? Colors.white : Colors.black}\n    />\n    <path\n      d=\"M440.127 162.415L403.514 177.789C408.188 186.57 412.103 195.813 415.166 205.433L451.741 190.075L440.127 162.415Z\"\n      fill={darkmode ? Colors.white : Colors.black}\n    />\n    <path\n      d=\"M256 393C331.663 393 393 331.663 393 256C393 180.337 331.663 119 256 119C180.337 119 119 180.337 119 256C119 331.663 180.337 393 256 393Z\"\n      fill={darkmode ? Colors.white : Colors.black}\n    />\n    <path\n      d=\"M384.158 149.054L447.626 85.586L426.413 64.373L362.945 127.841C370.632 134.267 377.733 141.368 384.158 149.054Z\"\n      fill={darkmode ? Colors.white : Colors.black}\n    />\n    <path\n      d=\"M334.302 108.533L349.698 71.93L322.045 60.298L306.664 96.864C316.282 99.934 325.523 103.853 334.302 108.533V108.533Z\"\n      fill={darkmode ? Colors.white : Colors.black}\n    />\n    <path\n      d=\"M204.058 97.281L188.382 60.837L160.824 72.69L176.511 109.16C185.253 104.409 194.468 100.427 204.058 97.281V97.281Z\"\n      fill={darkmode ? Colors.white : Colors.black}\n    />\n    <path\n      d=\"M307.942 414.719L323.618 451.163L351.177 439.309L335.49 402.839C326.747 407.591 317.532 411.573 307.942 414.719V414.719Z\"\n      fill={darkmode ? Colors.white : Colors.black}\n    />\n    <path\n      d=\"M403.888 333.505L440.573 348.703L452.055 320.987L415.413 305.807C412.397 315.443 408.52 324.702 403.888 333.505V333.505Z\"\n      fill={darkmode ? Colors.white : Colors.black}\n    />\n    <path\n      d=\"M362.946 384.158L426.414 447.626L447.627 426.413L384.159 362.945C377.733 370.632 370.632 377.733 362.946 384.158Z\"\n      fill={darkmode ? Colors.white : Colors.black}\n    />\n    <path\n      d=\"M108.485 334.211C103.811 325.43 99.8961 316.187 96.8331 306.567L60.2581 321.925L71.8721 349.585L108.485 334.211Z\"\n      fill={darkmode ? Colors.white : Colors.black}\n    />\n    <path\n      d=\"M422.319 241C422.761 245.943 423 250.944 423 256C423 261.056 422.761 266.057 422.319 271H512V241H422.319Z\"\n      fill={darkmode ? Colors.white : Colors.black}\n    />\n    <path\n      d=\"M127.842 362.946L64.374 426.414L85.587 447.627L149.055 384.159C141.368 377.733 134.267 370.632 127.842 362.946V362.946Z\"\n      fill={darkmode ? Colors.white : Colors.black}\n    />\n    <path\n      d=\"M177.698 403.467L162.302 440.07L189.955 451.702L205.336 415.136C195.718 412.066 186.477 408.147 177.698 403.467Z\"\n      fill={darkmode ? Colors.white : Colors.black}\n    />\n    <path\n      d=\"M256 423C250.944 423 245.943 422.761 241 422.319V512H271V422.319C266.057 422.761 261.056 423 256 423Z\"\n      fill={darkmode ? Colors.white : Colors.black}\n    />\n  </svg>\n);\n","import React, { useState } from \"react\";\nimport { Logo } from \"../../assets/images/logo\";\nimport { GithubIcon } from \"../../assets/images/github-icon\";\nimport { LinkedInIcon } from \"../../assets/images/linkediIn-icon\";\nimport { MediumIcon } from \"../../assets/images/medium-icon\";\nimport { MoonIcon } from \"../../assets/images/moon-icon\";\nimport Colors from \"../../colors\";\nimport { SunIcon } from \"../../assets/images/sun-icon\";\n\nexport const Header = ({ callback }) => {\n  const [darkmode, setDarkMode] = useState(false);\n\n  const topBarStyle = {\n    position: \"fixed\",\n    top: 0,\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    width: \"100%\",\n    height: 80,\n    backgroundColor: darkmode ? Colors.ash : Colors.lightGrey,\n    fontWeight: \"bold\",\n    padding: \"0px 20px\",\n    boxSizing: \"border-box\",\n    zIndex: 50\n  };\n\n  const spanStyle = {\n    margin: 10\n  };\n\n  return (\n    <div style={topBarStyle}>\n      <div>\n        <Logo darkmode={darkmode} />\n      </div>\n      <div>\n        {iconData.map(icon => {\n          return (\n            <a href={icon.url} target=\"_blank\">\n              {/* <img src={icon.imageSrc} width={30} style={spanStyle} /> */}\n              <icon.imageSrc style={iconStyle} darkmode={darkmode} />\n            </a>\n          );\n        })}\n        <a\n          onClick={() => {\n            darkmode ? setDarkMode(false) : setDarkMode(true);\n            callback(darkmode);\n          }}\n        >\n          {darkmode ? (\n            <SunIcon darkmode={darkmode} style={iconStyle} />\n          ) : (\n            <MoonIcon darkmode={darkmode} style={iconStyle} />\n          )}\n        </a>\n      </div>\n    </div>\n  );\n};\n\nconst iconData = [\n  {\n    url: \"https://github.com/v15a1\",\n    imageSrc: GithubIcon\n  },\n  {\n    url: \"https://www.linkedin.com/in/visalrajapakse99/\",\n    imageSrc: LinkedInIcon\n  },\n  {\n    url: \"https://medium.com/@visalrajapakse\",\n    imageSrc: MediumIcon\n  }\n];\n\nexport default Header;\n\nconst iconStyle = {\n  width: 30,\n  margin: 10\n};\n","import React from \"react\";\nimport Colors from \"../../colors\";\nexport const GithubIcon = ({ darkmode, style }) => (\n  //{darkmode ? Colors.white : Colors.black}\n  <svg\n  style = {style}\n    // width=\"240\"\n    // height=\"231\"\n    viewBox=\"0 0 240 231\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      d=\"M120 -0.000244141C53.7 -0.000244141 0 52.7998 0 117.92C0 170.03 34.38 214.22 82.05 229.8C88.05 230.91 90.25 227.26 90.25 224.13C90.25 221.33 90.15 213.91 90.1 204.08C56.72 211.19 49.68 188.26 49.68 188.26C44.22 174.65 36.33 171.01 36.33 171.01C25.46 163.7 37.17 163.85 37.17 163.85C49.22 164.67 55.55 176 55.55 176C66.25 194.03 83.64 188.82 90.5 185.81C91.58 178.18 94.67 172.99 98.1 170.04C71.45 167.09 43.44 156.95 43.44 111.77C43.44 98.8998 48.09 88.3798 55.79 80.1298C54.44 77.1498 50.39 65.1598 56.84 48.9198C56.84 48.9198 66.89 45.7598 89.84 61.0098C99.44 58.3898 109.64 57.0898 119.84 57.0298C130.04 57.0898 140.24 58.3898 149.84 61.0098C172.64 45.7598 182.69 48.9198 182.69 48.9198C189.14 65.1598 185.09 77.1498 183.89 80.1298C191.54 88.3798 196.19 98.8998 196.19 111.77C196.19 157.07 168.14 167.04 141.44 169.94C145.64 173.48 149.54 180.71 149.54 191.76C149.54 207.54 149.39 220.22 149.39 224.05C149.39 227.14 151.49 230.83 157.64 229.65C205.65 214.17 240 169.95 240 117.92C240 52.7998 186.27 -0.000244141 120 -0.000244141Z\"\n      fill={darkmode ? Colors.white : Colors.black}\n    />\n  </svg>\n);\n","import React from \"react\";\nimport Colors from \"../../colors\";\nexport const LinkedInIcon = ({ darkmode, style }) => (\n  //{darkmode ? Colors.white : Colors.black}\n\n  <svg\n    style={style}\n    // width=\"240\"\n    // height=\"240\"\n    viewBox=\"0 0 240 240\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <g clip-path=\"url(#clip0)\">\n      <path\n        d=\"M222.691 0H17.309C7.74902 0 0 7.74902 0 17.309V222.691C0 232.251 7.74902 240 17.309 240H222.691C232.251 240 240 232.251 240 222.691V17.309C240 7.74902 232.251 0 222.691 0V0ZM85.1294 181.406H55.9039V93.4808H85.1294V181.406ZM70.5176 81.4746H70.3271C60.52 81.4746 54.1772 74.7235 54.1772 66.286C54.1772 57.6581 60.7141 51.0938 70.7117 51.0938C80.7092 51.0938 86.8616 57.6581 87.052 66.286C87.052 74.7235 80.7092 81.4746 70.5176 81.4746ZM190.51 181.406H161.288V134.368C161.288 122.547 157.057 114.485 146.483 114.485C138.409 114.485 133.601 119.923 131.488 125.173C130.715 127.051 130.527 129.677 130.527 132.305V181.406H101.303C101.303 181.406 101.686 101.73 101.303 93.4808H130.527V105.93C134.41 99.939 141.359 91.4172 156.865 91.4172C176.093 91.4172 190.51 103.984 190.51 130.99V181.406Z\"\n        fill={darkmode ? Colors.white : Colors.black}\n      />\n    </g>\n    <defs>\n      <clipPath id=\"clip0\">\n        <rect width=\"240\" height=\"240\" fill=\"white\" />\n      </clipPath>\n    </defs>\n  </svg>\n);\n","import React from \"react\";\nimport Colors from \"../../colors\";\nexport const MediumIcon = ({ darkmode, style }) => (\n  <svg\n    style={style}\n    // width=\"240\"\n    // height=\"240\"\n    viewBox=\"0 0 240 240\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      d=\"M216 19.2H24C21.3504 19.2 19.2 21.3504 19.2 24V216C19.2 218.65 21.3504 220.8 24 220.8H216C218.65 220.8 220.8 218.65 220.8 216V24C220.8 21.3504 218.65 19.2 216 19.2ZM192 64.8L183.259 75.3456C182.707 75.8928 182.4 76.632 182.4 77.4V157.2C182.4 157.968 182.707 158.707 183.259 159.254L192 170.621V172.8H144V170.621L157.541 159.254C158.093 158.707 158.4 157.968 158.4 157.2V85.8192L119.27 172.8H119.266H111.859L72 88.2V151.118C72 152.174 72.3648 153.197 73.032 154.022L86.4 170.621V172.8H48V170.621L61.3584 154.118C62.0304 153.293 62.4 152.261 62.4 151.2V78.6624C62.4 77.9808 62.16 77.3232 61.7184 76.8L52.8 64.8V62.4H86.8656L123.461 140.078L158.41 62.4H192V64.8Z\"\n      fill={darkmode ? Colors.white : Colors.black}\n    />\n  </svg>\n);\n","const Fonts = {\n    GilroyThin: \"Gilroy-Thin\",\n    GilroyUltraThin: \"Gilroy-UltraLight\",\n    GilroyBlack: \"Gilroy-Black\",\n    GilroyRegular: \"Gilroy-Regular\",\n    JetBrainsMonoBold: \"JetBrainsMono-Bold\",\n    JetBrainsMonoRegular : \"JetBrainsMono-Regular\"\n}\n\nexport default Fonts","import Fonts from \"./assets/fonts/fonts\";\n\nconst Constants = {\n    appbarHeightPadding: 80,\n    paraStyle:{\n        fontFamily : Fonts.JetBrainsMonoRegular,\n        fontSize: 18\n    }\n}\n\nexport default Constants","import React, { useState } from \"react\";\nimport { Row, Col } from \"react-flexbox-grid\";\nimport Constants from \"../../constants\";\nimport { AboutMeImage } from \"../../assets/images/about-me\";\nimport Fonts from \"../../assets/fonts/fonts\";\n// import \"./about-me.scss\";\nimport Colors from \"../../colors\";\n\nconst AboutMe = ({ styles, windowHeight, windowWidth, darkmode }) => {\n  var ReactRotatingText = require(\"react-rotating-text\");\n\n  return (\n    <Row\n      style={{\n        background: Colors.black,\n        color: Colors.white\n        // paddingTop: Constants.appbarHeightPadding\n      }}\n    >\n      <Col xs={12} sm={12} md={6} lg={6}>\n        {/* <AboutMeImage /> */}\n      </Col>\n      <Col xs={12} sm={12} md={6} lg={6}>\n        <div style={{ padding: 20, lineHeight: 1.6 }}>\n          <div style={{ textAlign: \"left\" }}>\n            <span style={{ fontFamily: Fonts.GilroyBlack, fontSize: 60 }}>\n              About Me\n            </span>\n            <div style={{ textAlign: \"justify\" }}>\n              <p style={Constants.paraStyle}>\n                Hey! I'm Visal, a Software Engineering undergrad studying at the\n                <span style={{ fontFamily: Fonts.JetBrainsMonoBold }}>\n                  {\" \"}\n                  Informatics Institute of Technology\n                </span>{\" \"}\n                in Colombo, Sri Lanka affliated with the University of\n                Westminster, England. Enthusiast in Mobile Application\n                Development, or Front End Development . The eventual career goal\n                is to become a fully fledged and fully furnished{\" \"}\n                <span style={{ fontFamily: Fonts.JetBrainsMonoBold }}>\n                  iOS application developer.\n                </span>\n              </p>\n            </div>\n          </div>\n\n          <span\n            style={{\n              fontFamily: Fonts.JetBrainsMonoRegular,\n              fontSize: 28,\n              color: Colors.black,\n              textAlign: \"center\"\n            }}\n          >\n            <span\n              style={{\n                fontSize: 28,\n                color: darkmode ? Colors.darkModeYellow : Colors.yellowOrchre\n              }}\n            >\n              I'm a fan of{<br />}\n            </span>\n            <span\n              style={{\n                fontFamily: Fonts.JetBrainsMonoBold,\n                background: darkmode\n                  ? Colors.darkModeYellow\n                  : Colors.yellowOrchre\n              }}\n            >\n              #<ReactRotatingText items={interests} />\n            </span>\n          </span>\n          <br />\n          <div style={{ marginTop: windowHeight / 10 }}>\n            {contactInfo.map(info => (\n              <ContactInfo text={info} />\n            ))}\n          </div>\n        </div>\n      </Col>\n    </Row>\n  );\n};\n\nexport default AboutMe;\n\nexport const ContactInfo = ({ text }) => {\n  return (\n    <Row style={{ margin: \"10px 0 10px 0\" }}>\n      <div\n        className={\"custom-div dark\"}\n        style={{ fontFamily: Fonts.JetBrainsMonoRegular }}\n      >\n        {text}\n      </div>\n    </Row>\n  );\n};\n\nconst interests = [\n  \"mobile_app_dev\",\n  \"front_end_dev\",\n  \"android_dev\",\n  \"drawing\",\n  \"ui/ux\",\n  \"ios_dev\",\n  \"graphic_designing\"\n];\n\nconst contactInfo = [\n  \"Email : visalrajapakse@gmail.com\",\n  \"Phone : +94 77 011 5903\"\n];\n","import Photo from \"../assets/images/photo.png\"\nconst ImageAssets ={\n    personalPhoto : Photo\n}\n\nexport default ImageAssets","import React from \"react\";\nimport Colors from \"../../colors\";\n\nexport const CircleBackground = ({ style, darkmode }) => {\n  return (\n    <svg\n      style={style}\n      viewBox=\"0 0 720 720\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <circle cx=\"360\" cy=\"360\" r=\"360\" fill={darkmode ? Colors.darkModeYellow : Colors.lightModeYellow} />\n    </svg>\n  );\n};\n","import React, { useState, useEffect, useRef } from \"react\";\nimport ImageAssets from \"../../assets/image-assets\";\nimport { CircleBackground } from \"../../assets/images/circle-background\";\nimport { Row, Col } from \"react-flexbox-grid\";\nimport Fonts from \"../../assets/fonts/fonts\";\n// import \"./landing-page.scss\";\nimport Colors from \"../../colors\";\n\nexport const LandingComponent = ({ windowWidth, windowHeight, darkmode }) => {\n  const [divHeight, setHeight] = useState(0);\n  const [divWidth, setWidth] = useState(0);\n  const ref = useRef(null);\n\n  useEffect(() => {\n    setHeight(ref.current.clientHeight);\n    setWidth(ref.current.clientWidth);\n  });\n\n  const circleStyle = {\n    position: \"absolute\",\n    left: windowWidth > 768 ? \"20%\" : 0,\n    top: \"30%\",\n    zIndex: -2\n  };\n\n  return (\n    <Row\n      style={{\n        backgroundColor: darkmode ? Colors.blackAsh : null,\n        color: darkmode ? Colors.white : null,\n        zIndex: -30\n      }}\n    >\n      <Col xs={12} sm={12} md={5} lg={5} style={{ padding: 16 }}>\n        <div\n          ref={ref}\n          style={{\n            textAlign: \"left\",\n            position: \"relative\",\n            zIndex: 2,\n            top: windowWidth < 768 ? 0 : windowHeight / 2 - divHeight / 1.5,\n            left: windowWidth < 768 ? 0 : windowWidth / 2 - divWidth\n\n            // marginLeft: windowWidth > 768 ? \"50%\" : 0\n          }}\n        >\n          <div\n            style={{\n              fontFamily: Fonts.GilroyBlack,\n              fontSize: windowHeight * 0.1,\n              width: 100\n            }}\n          >\n            <span style={{ float: \"left\" }}>Visal</span>\n            <span>Rajapakse</span>\n          </div>\n\n          <br />\n          <div>\n            {personalInterests.map(interest => {\n              return (\n                <p\n                  style={{ fontFamily: Fonts.JetBrainsMonoBold, fontSize: 16 }}\n                >\n                  {interest}\n                </p>\n              );\n            })}\n          </div>\n          <a target=\"_blank\" className={`custom-div button ${darkmode? \"dark\" : \"\"}`} href=\"cv.pdf\">\n            <span style={{ fontFamily: Fonts.JetBrainsMonoRegular }}>\n              Download CV\n            </span>\n          </a>\n        </div>\n      </Col>\n      <Col\n        xs={12}\n        sm={12}\n        md={7}\n        lg={7}\n        style={{ paddingLeft: 0, paddingRight: 0, zIndex: 10 }}\n      >\n        <div style={{ overflow: \"hidden\" }}>\n          <div style={{ position: \"relative\" }}>\n            <img\n              src={ImageAssets.personalPhoto}\n              style={{\n                position: \"relative\",\n                left: windowWidth > 768 ? \"10%\" : 0,\n                zIndex: -1\n              }}\n              height={windowWidth < 460 ? null : windowHeight - 90}\n              width={windowWidth < 460 ? windowWidth : null}\n            />\n            <CircleBackground width={300} height={300} style={circleStyle} darkmode={darkmode} />\n          </div>\n        </div>\n      </Col>\n    </Row>\n  );\n};\n\nconst personalInterests = [\"// Undergrad\", \"// iOS Enthusiast\", \"// UI/UX\"];\n","import React from \"react\";\nimport Header from \"../components/appbar/appbar.component\";\nimport AboutMe from \"../components/content/about-me.component\";\nimport ImageAssets from \"../assets/image-assets\";\nimport { CircleBackground } from \"../assets/images/circle-background\";\nimport { Grid, Row, Col } from \"react-flexbox-grid\";\n// import ScrollSnap from \"scroll-snap\";\nimport Fonts from \"../assets/fonts/fonts\";\n\nimport \"./homepage.scss\";\nimport { LandingComponent } from \"../components/landing-component/landing-component.component\";\nimport Constants from \"../constants\";\n\nfunction callback() {\n  console.log(\"snapped\");\n}\nexport default class HomePage extends React.Component {\n  containers = React.createRef();\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      windowWidth: 0,\n      windowHeight: 0,\n      darkmodeEnabled: false\n    };\n  }\n\n  componentDidMount() {\n    this.updateDimensions();\n    window.addEventListener(\"resize\", this.updateDimensions.bind(this));\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateDimensions.bind(this));\n  }\n\n  updateDimensions() {\n    let windowWidth = typeof window !== \"undefined\" ? window.innerWidth : 0;\n    let windowHeight = typeof window !== \"undefined\" ? window.innerHeight : 0;\n\n    this.setState({ windowWidth, windowHeight });\n  }\n\n  callbackDarkMode = darkmode => {\n    this.setState({ darkmodeEnabled: !darkmode });\n  };\n\n  render() {\n    const { windowWidth, windowHeight, darkmodeEnabled } = this.state;\n\n    const styles = {\n      topBarHeight: 80,\n      footerMenuHeight: 50,\n      showFooterMenuText: windowWidth > 500,\n      showSidebar: windowWidth > 768,\n      sidebarWidth: windowWidth < 1100 ? 50 : 150,\n      sidebarCollapsed: windowWidth < 1100\n    };\n\n    const circleStyle = {\n      position: \"absolute\",\n      left: windowWidth > 768 ? \"20%\" : 0,\n      top: \"30%\",\n      zIndex: -2\n    };\n\n    return (\n      <div\n        className={\"home-container\"}\n        ref={this.containers}\n        style={{\n          minHeight: \"100vh\",\n          position: \"relative\",\n          height: windowHeight,\n          // scrollSnapType: \"y proximity\",\n          // overflowY: windowWidth > 768 ? \"scroll\" : null,\n          marginTop: Constants.appbarHeightPadding\n        }}\n      >\n        <Header styles={styles} callback={this.callbackDarkMode} />\n        <Grid fluid>\n          {/* <h1>{this.state.darkmodeEnabled.toString()}</h1> */}\n          <LandingComponent\n            darkmode={darkmodeEnabled}\n            windowHeight={windowHeight}\n            windowWidth={windowWidth}\n          />\n          <AboutMe\n            styles={styles}\n            windowHeight={windowHeight}\n            windowWidth={windowWidth}\n            darkmode={darkmodeEnabled}\n          />\n        </Grid>\n      </div>\n    );\n  }\n}\n\n/*\n<div style={{ overflow: \"hidden\" }}>\n                <div style={{ position: \"relative\" }}>\n                  <img\n                    src={ImageAssets.personalPhoto}\n                    style={{\n                      position: \"relative\",\n                      // left: windowWidth > 768 ? \"25%\" : 0,\n                      zIndex: -1\n                    }}\n                    height={windowHeight - 90}\n                  />\n                  <CircleBackground\n                    width={300}\n                    height={300}\n                    style={circleStyle}\n                  />\n                </div>\n              </div>\n             */\n","import React from 'react';\nimport './App.css';\nimport HomePage from './views/homepage';\nimport \"./default-styles.scss\"\n\nfunction App() {\n  return (\n    <div className=\"App\">\n    <HomePage />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}